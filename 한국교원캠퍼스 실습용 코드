##.3-1.function 

def add(a,b):

    return a+b



add(6,9)







##.3-2.Listed



for i in range(50):

    print(i)





##.3-3.equation

\begin{align}

\dot{x} & = \sigma(y-x) \\

\dot{y} & = \rho x - y - xz \\

\dot{z} & = -\beta z + xy

\end{align}





##.3-4.Cauchy?Schwarz inequality

\begin{equation*}

\left( \sum_{k=1}^n a_k b_k \right)^2 \leq \left( \sum_{k=1}^n a_k^2 \right) \left( \sum_{k=1}^n b_k^2 \right)

\end{equation*}





#4.Visualization



##4-1.Image



from IPython.display import Image

 

Image("https://www.teacher21.co.kr/_img/logo_new.png")





##4-2.Video



from IPython.display import YouTubeVideo

 

YouTubeVideo("BHrZmhXhh9g")



##4-3.Chart



import pandas as pd



df = pd.DataFrame([

        ['서울', 18189, 17925],

        ['인천', 10204, 10204],

        ['대구', 8080, 8080]

    ], columns=['지역', '2013년 12월', '2014년 1월'])



print(df)





##4-4.Perfomence



%timeit 3+8



##4-5.Time Line



import datetime

datetime.datetime.utcnow()





#5.Crawling



from bs4 import BeautifulSoup

from urllib.request import urlopen



with urlopen('https://en.wikipedia.org/wiki/Main_Page') as response:

    soup = BeautifulSoup(response, 'html.parser')

    for anchor in soup.find_all('a'):

        print(anchor.get('href', '/'))







#6.Data Science

 

import matplotlib.pyplot as plt

import numpy as np

import matplotlib

matplotlib.rcParams['font.size'] = 8.0



# Fixing random state for reproducibility

np.random.seed(19680801)





# create random data

data1 = np.random.random([6, 50])



# set different colors for each set of positions

colors1 = ['C{}'.format(i) for i in range(6)]



# set different line properties for each set of positions

# note that some overlap

lineoffsets1 = np.array([-15, -3, 1, 1.5, 6, 10])

linelengths1 = [5, 2, 1, 1, 3, 1.5]



fig, axs = plt.subplots(2, 2)



# create a horizontal plot

axs[0, 0].eventplot(data1, colors=colors1, lineoffsets=lineoffsets1,

                    linelengths=linelengths1)



# create a vertical plot

axs[1, 0].eventplot(data1, colors=colors1, lineoffsets=lineoffsets1,

                    linelengths=linelengths1, orientation='vertical')



# create another set of random data.

# the gamma distribution is only used fo aesthetic purposes

data2 = np.random.gamma(4, size=[60, 50])



# use individual values for the parameters this time

# these values will be used for all data sets (except lineoffsets2, which

# sets the increment between each data set in this usage)

colors2 = 'black'

lineoffsets2 = 1

linelengths2 = 1



# create a horizontal plot

axs[0, 1].eventplot(data2, colors=colors2, lineoffsets=lineoffsets2,

                    linelengths=linelengths2)





# create a vertical plot

axs[1, 1].eventplot(data2, colors=colors2, lineoffsets=lineoffsets2,

                    linelengths=linelengths2, orientation='vertical')



plt.show()





#7. turtle run

import turtle as t

 

n = 60    # 원을 60번 그림

t.shape('turtle')

t.speed('fastest')      # 거북이 속도를 가장 빠르게 설정

for i in range(n):

    t.circle(120)       # 반지름이 120인 원을 그림

    t.right(360 / n)    # 오른쪽으로 6도 회전
